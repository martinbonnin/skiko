# Default Skiko CI
name: temp-check


# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:



  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  GRADLE_SCRIPT: ./gradlew --no-daemon --stacktrace --info --rerun-tasks -Pskiko.native.enabled=true -Pkotlin.native.cacheKind.linuxX64=none -Pskiko.test.onci=true :skiko:awtTest

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
   linux:
    strategy:
     matrix:
       jdkDistributions: [ adopt ]
       jdkVersions: [ 11 ]
       counter: [ 1,2,3,4,5,6 ]
#       jdkDistributions: [ temurin, zulu, adopt, liberica, microsoft, corretto ]
#       jdkVersions: [ 11, 11.0, 11.0.4, 16, 17 ]
    runs-on: ubuntu-20.04
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - run: echo "counter ${{ matrix.counter }}"
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: '${{ matrix.jdkDistributions }}'
          java-version: '${{ matrix.jdkVersions }}'
      - uses: android-actions/setup-android@v2
      # Runs a set of commands using the runners shell
      - shell: bash
        run: |
          # TODO: simplify installation of compilers.
          sudo apt-get update -y
          sudo apt-get install build-essential software-properties-common -y
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get update -y
          sudo apt-get install build-essential software-properties-common -y
          sudo apt-get update
          sudo apt-get install gcc-9 g++-9 -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9
          sudo update-alternatives --config gcc
          sudo apt-get install ninja-build fontconfig libfontconfig1-dev libglu1-mesa-dev libxrandr-dev libdbus-1-dev zip xvfb -y
          sudo Xvfb :0 -screen 0 1280x720x24 &
      - shell: bash
        timeout-minutes: 30
        run: |
          # awtTest
          progress() {
            while [ 0 ]
              do
                echo "tick $(date)"
                sleep 1
              done
          }
          progress &
          export DISPLAY=:0
          $GRADLE_SCRIPT
      - shell: bash
        timeout-minutes: 30
        run: |
          # awtTest
          progress() {
            while [ 0 ]
              do
                echo "tick $(date)"
                sleep 1
              done
          }
          progress &
          export DISPLAY=:0
          $GRADLE_SCRIPT
      - shell: bash
        timeout-minutes: 30
        run: |
          # awtTest
          progress() {
            while [ 0 ]
              do
                echo "tick $(date)"
                sleep 1
              done
          }
          progress &
          export DISPLAY=:0
          $GRADLE_SCRIPT
      - shell: bash
        timeout-minutes: 30
        run: |
          # awtTest
          progress() {
            while [ 0 ]
              do
                echo "tick $(date)"
                sleep 1
              done
          }
          progress &
          export DISPLAY=:0
          $GRADLE_SCRIPT
      - shell: bash
        timeout-minutes: 30
        run: |
          # awtTest
          progress() {
            while [ 0 ]
              do
                echo "tick $(date)"
                sleep 1
              done
          }
          progress &
          export DISPLAY=:0
          $GRADLE_SCRIPT
      - shell: bash
        timeout-minutes: 30
        run: |
          # awtTest
          progress() {
            while [ 0 ]
              do
                echo "tick $(date)"
                sleep 1
              done
          }
          progress &
          export DISPLAY=:0
          $GRADLE_SCRIPT
      - shell: bash
        timeout-minutes: 30
        run: |
          # awtTest
          progress() {
            while [ 0 ]
              do
                echo "tick $(date)"
                sleep 1
              done
          }
          progress &
          export DISPLAY=:0
          $GRADLE_SCRIPT
      - shell: bash
        timeout-minutes: 30
        run: |
          # awtTest
          progress() {
            while [ 0 ]
              do
                echo "tick $(date)"
                sleep 1
              done
          }
          progress &
          export DISPLAY=:0
          $GRADLE_SCRIPT
      - shell: bash
        timeout-minutes: 30
        run: |
          # awtTest
          progress() {
            while [ 0 ]
              do
                echo "tick $(date)"
                sleep 1
              done
          }
          progress &
          export DISPLAY=:0
          $GRADLE_SCRIPT
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-reports-linux
          path: ./skiko/build/reports/tests
          retention-days: 5
